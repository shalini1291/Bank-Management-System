
  CREATE TABLE "RECURRING_PAYMENT" 
   (	"RECURRING_ID" VARCHAR2(40), 
	"FROM_ACCOUNT_ID" VARCHAR2(40) NOT NULL ENABLE, 
	"TO_ACCOUNT_ID" VARCHAR2(40) NOT NULL ENABLE, 
	"AMOUNT" NUMBER(15,4) NOT NULL ENABLE, 
	"INTERVAL_DAYS" NUMBER NOT NULL ENABLE, 
	"NEXT_PAYMENT_DATE" DATE NOT NULL ENABLE, 
	"STATUS" CHAR(1) DEFAULT 'N', 
	"CREATED_AT" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"END_DATE" DATE NOT NULL ENABLE, 
	 CHECK (STATUS IN ('Y', 'N')) ENABLE, 
	 PRIMARY KEY ("RECURRING_ID")
  USING INDEX  ENABLE
   ) ;

  ALTER TABLE "RECURRING_PAYMENT" ADD FOREIGN KEY ("FROM_ACCOUNT_ID")
	  REFERENCES "ACCOUNT" ("ACCOUNT_ID") ENABLE;
  ALTER TABLE "RECURRING_PAYMENT" ADD FOREIGN KEY ("TO_ACCOUNT_ID")
	  REFERENCES "ACCOUNT" ("ACCOUNT_ID") ENABLE;

  CREATE OR REPLACE EDITIONABLE TRIGGER "RECURRING_PAYMENT_UPDATE_LOG" 
BEFORE UPDATE ON RECURRING_PAYMENT
FOR EACH ROW
BEGIN
    IF UPDATING('AMOUNT') THEN
        IF :OLD.AMOUNT <> :NEW.AMOUNT THEN
            INSERT INTO RECURRING_PAYMENT_LOG
            (RECURRING_ID, UPDATED_COLUMN, OLD_VALUE, NEW_VALUE)
            VALUES
            (:OLD.RECURRING_ID, 'AMOUNT', :OLD.AMOUNT, :NEW.AMOUNT);
        END IF;
    END IF;

    IF UPDATING('INTERVAL_DAYS') THEN
        IF :OLD.INTERVAL_DAYS <> :NEW.INTERVAL_DAYS THEN
            INSERT INTO RECURRING_PAYMENT_LOG
            (RECURRING_ID, UPDATED_COLUMN, OLD_VALUE, NEW_VALUE)
            VALUES
            (:OLD.RECURRING_ID, 'INTERVAL_DAYS', :OLD.INTERVAL_DAYS, :NEW.INTERVAL_DAYS);
        END IF;
    END IF;

    IF UPDATING('END_DATE') THEN
        IF :OLD.END_DATE <> :NEW.END_DATE THEN
            INSERT INTO RECURRING_PAYMENT_LOG
            (RECURRING_ID, UPDATED_COLUMN, OLD_VALUE, NEW_VALUE)
            VALUES
            (:OLD.RECURRING_ID, 'END_DATE', :OLD.END_DATE, :NEW.END_DATE);
        END IF;
    END IF;

    IF UPDATING('RECURRING_ID') THEN
        RAISE_APPLICATION_ERROR(-20013,'RECURRING ID CANNOT BE UPDATED');
    END IF;

    IF UPDATING('FROM_ACCOUNT_ID') THEN
        RAISE_APPLICATION_ERROR(-20013,'FROM_ACCOUNT_ID CANNOT BE UPDATED');
    END IF;

    IF UPDATING('TO_ACCOUNT_ID') THEN
        RAISE_APPLICATION_ERROR(-20013,'TO_ACCOUNT_ID CANNOT BE UPDATED');
    END IF;

    IF UPDATING('NEXT_PAYMENT_DATE') THEN
        RAISE_APPLICATION_ERROR(-20013,'NEXT_PAYMENT_DATE CANNOT BE UPDATED, IT IS UPDATED USING INTERVAL DAYS');
    END IF;

    IF UPDATING('STATUS') THEN
        RAISE_APPLICATION_ERROR(-20013,'STATUS CANNOT BE UPDATED, IT IS UPDATED USING END DATE');
    END IF;

    IF UPDATING('CREATED_AT') THEN
        RAISE_APPLICATION_ERROR(-20013,'CREATED_AT CANNOT BE UPDATED, IT IS THE DEFAULT VALUE');
    END IF;
END;
/
ALTER TRIGGER "RECURRING_PAYMENT_UPDATE_LOG" ENABLE;