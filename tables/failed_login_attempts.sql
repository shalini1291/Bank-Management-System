
  CREATE TABLE "FAILED_LOGIN_ATTEMPTS" 
   (	"ACCOUNT_ID" VARCHAR2(40), 
	"ATTEMPTED_AT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP, 
	"FAILED_COUNT" NUMBER
   ) ;

  CREATE OR REPLACE EDITIONABLE TRIGGER "ADD_FAILED_ATTEMPT_TRIGGER" 
AFTER INSERT OR UPDATE ON FAILED_LOGIN_ATTEMPTS
DECLARE
    V_ACCOUNT_ID ACCOUNT.ACCOUNT_ID%TYPE;
    V_COUNT NUMBER := 0;
BEGIN
    SELECT FAILED_COUNT INTO V_COUNT FROM FAILED_LOGIN_ATTEMPTS WHERE ACCOUNT_ID = FAILED_ATTEMPTS.V_ACCOUNT_ID;
    IF V_COUNT > 2 THEN
        UPDATE ACCOUNT
        SET IS_LOCKED = 'Y'
        WHERE ACCOUNT_ID = FAILED_ATTEMPTS.V_ACCOUNT_ID;
        DBMS_OUTPUT.PUT_LINE('YOUR ACCOUNT ' || FAILED_ATTEMPTS.V_ACCOUNT_ID || ' IS LOCKED FOR MULTIPLE FAILED PASSWORD ATTEMPTS' );
    END IF;
END;
/
ALTER TRIGGER "ADD_FAILED_ATTEMPT_TRIGGER" ENABLE;
  CREATE OR REPLACE EDITIONABLE TRIGGER "ADD_FAILED_ATTEMPT_TRIGGER_GET_ACCCOUNT" 
BEFORE INSERT OR UPDATE ON FAILED_LOGIN_ATTEMPTS
FOR EACH ROW
DECLARE
BEGIN
    FAILED_ATTEMPTS.V_ACCOUNT_ID := :NEW.ACCOUNT_ID;
END;
/
ALTER TRIGGER "ADD_FAILED_ATTEMPT_TRIGGER_GET_ACCCOUNT" ENABLE;