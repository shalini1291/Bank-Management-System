create or replace PACKAGE UTILS_ACCOUNT
IS
    TYPE ACCOUNT_TYPE IS TABLE OF ACCOUNT%ROWTYPE;
    V_ACCOUNTS ACCOUNT_TYPE;
    PROCEDURE GET_ACCOUNTS;
    PROCEDURE LOAD_ACCOUNTS;
    PROCEDURE UPDATE_CURRENCY_CODE_BY_ACCOUNT_ID
    (
        P_ACCOUNT_ID ACCOUNT.ACCOUNT_ID%TYPE,
        P_CURRENCY_CODE ACCOUNT.CURRENCY_CODE%TYPE
    );
    PROCEDURE CURRENCY_CONVERTER
    (
        FROM_CURRENCY_CODE EXCHANGE_CURRENCY.CURRENCY_CODE%TYPE,
        TO_CURRENCY_CODE EXCHANGE_CURRENCY.CURRENCY_CODE%TYPE,
        FROM_CURRENCY_VALUE ACCOUNT.BALANCE%TYPE
    );
    FUNCTION CURRENCY_CONVERTER_FUNC
    (
        FROM_CURRENCY_CODE EXCHANGE_CURRENCY.CURRENCY_CODE%TYPE,
        TO_CURRENCY_CODE EXCHANGE_CURRENCY.CURRENCY_CODE%TYPE,
        FROM_CURRENCY_VALUE ACCOUNT.BALANCE%TYPE
    ) RETURN NUMBER;

    PROCEDURE UPDATE_ACCOUNT_TYPE
    (
        P_ACCOUNT_ID ACCOUNT.ACCOUNT_ID%TYPE,
        P_ACCOUNT_TYPE ACCOUNT.ACCOUNT_TYPE%TYPE
    );

    PROCEDURE UPDATE_IS_LOCKED
    (
        P_ACCOUNT_ID ACCOUNT.ACCOUNT_ID%TYPE,
        P_IS_LOCKED ACCOUNT.IS_LOCKED%TYPE
    );

    PROCEDURE UPDATE_ACTIVE_STATUS
    (
        P_ACCOUNT_ID ACCOUNT.ACCOUNT_ID%TYPE,
        P_ACTIVE_STATUS ACCOUNT.ACTIVE_STATUS%TYPE
    );


    PROCEDURE UPDATE_PASSWORD
    (
        P_ACCOUNT_ID ACCOUNT.ACCOUNT_ID%TYPE,
        P_CURRENT_PASSWORD ACCOUNT.PASSWORD%TYPE,
        P_NEW_PASSWORD ACCOUNT.PASSWORD%TYPE
    );
    
END UTILS_ACCOUNT;
/